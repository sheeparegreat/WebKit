# Copyright (C) 2024 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

using WebCore::FontPlatformData::IPCData = Variant<WebCore::FontPlatformSerializedData, WebCore::FontPlatformSerializedCreationData>;

[RefCounted] class WebCore::Font {
    WebCore::FontInternalAttributes attributes();
    WebCore::FontPlatformData platformData();
}

[CreateUsing=fromIPCData] class WebCore::FontPlatformData {
    float size();
    WebCore::FontOrientation orientation();
    WebCore::FontWidthVariant widthVariant();
    WebCore::TextRenderingMode textRenderingMode();
    bool syntheticBold();
    bool syntheticOblique();
    WebCore::FontPlatformData::IPCData toIPCData();
}

header: <WebCore/FontPlatformData.h>
[CustomHeader] struct WebCore::FontPlatformDataAttributes {
    float m_size;
    WebCore::FontOrientation m_orientation;
    WebCore::FontWidthVariant m_widthVariant;
    WebCore::TextRenderingMode m_textRenderingMode;
    bool m_syntheticBold;
    bool m_syntheticOblique;
#if PLATFORM(WIN) && USE(CAIRO)
    LOGFONT m_font;
#endif
#if USE(CORE_TEXT)
    FontPlatformDataAttributesCFDictionaryRef m_attributes;
    CTFontDescriptorOptions m_options;
    RetainPtr<CFStringRef> m_url;
    RetainPtr<CFStringRef> m_psName;
#endif
#if USE(SKIA)
    SkString m_familyName;
    SkFontStyle m_style;
    Vector<hb_feature_t> m_features;
#endif
};

header: <WebCore/FontCustomPlatformData.h>
[CustomHeader] struct WebCore::FontCustomPlatformSerializedData {
    Ref<WebCore::SharedBuffer> fontFaceData;
    String itemInCollection;
    WebCore::RenderingResourceIdentifier renderingResourceIdentifier;
};
